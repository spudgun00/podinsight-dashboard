"use client"

import { Search } from "lucide-react"
import { mockEpisodes, type Episode } from "@/lib/mock-episode-data"
import { ExpandableEpisodeGrid } from "./ExpandableEpisodeGrid"

// Feature flag for using mock data
const USE_MOCK_DATA = process.env.NEXT_PUBLIC_USE_MOCK_DATA === 'true'

export function EpisodeIntelligenceCards({
  onViewAllEpisodesClick,
  onViewBriefClick,
}: {
  onViewAllEpisodesClick: () => void
  onViewBriefClick: (episode: Episode) => void
}) {
  // TODO: When USE_MOCK_DATA is false, fetch real episodes from API
  const episodes = USE_MOCK_DATA ? mockEpisodes : mockEpisodes // For now, always use mock
  
  return (
    <div className="bg-transparent p-0 rounded-lg my-6">
      {/* Demo Mode Banner */}
      {USE_MOCK_DATA && (
        <div className="mb-4 bg-yellow-500/10 border border-yellow-500/30 rounded-lg px-4 py-2">
          <p className="text-sm text-yellow-200">
            ðŸŽ­ Demo Mode: Showing sample Episode Intelligence data
          </p>
        </div>
      )}
      
      {/* Header */}
      <div className="flex flex-col md:flex-row md:items-center justify-between mb-6 gap-4">
        <div>
          <h2 className="text-2xl font-bold text-white">Episode Intelligence</h2>
          <p className="text-sm text-gray-400">{episodes.length} new signals today</p>
        </div>
        <div className="flex flex-col md:flex-row items-start md:items-center gap-4">
          <div className="flex items-center gap-2 flex-wrap">
            <button className="px-3 py-1.5 text-xs font-semibold rounded-full bg-signal-red/20 text-signal-red border border-signal-red/30">
              ðŸ”¥ All Signals
            </button>
            <button className="px-3 py-1.5 text-xs font-semibold rounded-full bg-gray-800 text-gray-300 hover:bg-gray-700">
              Investments
            </button>
            <button className="px-3 py-1.5 text-xs font-semibold rounded-full bg-gray-800 text-gray-300 hover:bg-gray-700">
              Portfolio
            </button>
            <a
              href="/episode-card-demo"
              className="px-3 py-1.5 text-xs font-semibold rounded-full bg-gray-800 text-gray-300 hover:bg-gray-700"
            >
              Competitors
            </a>
          </div>
          <div className="flex items-center gap-2 w-full md:w-auto">
            <div className="relative w-full md:w-auto">
              <Search className="absolute left-3 top-1/2 -translate-y-1/2 text-gray-400" size={16} />
              <input
                type="text"
                placeholder="Search episodes..."
                className="bg-gray-800 border border-gray-700 rounded-lg pl-9 pr-3 py-1.5 text-sm text-white w-full"
              />
            </div>
            <button
              onClick={onViewAllEpisodesClick}
              className="text-sm font-semibold text-white whitespace-nowrap hover:text-gray-300"
            >
              View All
            </button>
          </div>
        </div>
      </div>

      {/* Cards Grid */}
      <ExpandableEpisodeGrid episodes={episodes} onViewBriefClick={onViewBriefClick} />
    </div>
  )
}
